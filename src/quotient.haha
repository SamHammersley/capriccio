function quotient(x : Z, y : Z) : Z
precondition x >= 0 /\ y > 0
var q : Z
	r : Z
begin
	r := x
	{x >= 0 /\ y > 0 /\ r = x}	
	q := 0
	{x >= 0 /\ y > 0 /\ r = x /\ q = 0}
	while r >= y do
	invariant x >= 0 /\ y > 0 /\ x = q * y + r
	begin
		q := q + 1
		{x >= 0 /\ y > 0 /\ x = (q - 1) * y + r}
		r := r - y
		{x >= 0 /\ y > 0 /\ x = q * y + r}
		skip
	end
	{r < y /\ x = q * y + r}
	quotient := q
	{x = quotient * y + r}
	skip
end
